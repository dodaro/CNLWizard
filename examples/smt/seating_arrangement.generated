; benchmark
(set-info :status unknown)
(set-logic QF_UFLIA)
(declare-fun position (Int) Int)
(declare-fun guest_Irene () Int)
(declare-fun guest_Fred () Int)
(declare-fun guest_Emily () Int)
(declare-fun guest_Kate () Int)
(declare-fun guest_Colin () Int)
(assert
 (let ((?x19 (position guest_Irene)))
 (let (($x70 (and (distinct (- (position guest_Fred) 1) ?x19) true)))
 (let (($x68 (and (and (distinct (+ (position guest_Emily) 1) ?x19) true) (and (distinct (- (position guest_Emily) 1) ?x19) true))))
 (let (($x65 (and (and (distinct (+ (position guest_Kate) 1) ?x19) true) (and (distinct (- (position guest_Kate) 1) ?x19) true))))
 (let (($x60 (and (and (distinct (+ (position guest_Emily) 1) (position guest_Kate)) true) (and (distinct (- (position guest_Emily) 1) (position guest_Kate)) true))))
 (let (($x57 (and (and (distinct (+ (position guest_Emily) 1) (position guest_Fred)) true) (and (distinct (- (position guest_Emily) 1) (position guest_Fred)) true))))
 (let (($x52 (and (and (distinct (+ (position guest_Colin) 1) (position guest_Kate)) true) (and (distinct (- (position guest_Colin) 1) (position guest_Kate)) true))))
 (let ((?x10 (position guest_Emily)))
 (let (($x46 (and (distinct ?x19 ?x10) true)))
 (let ((?x16 (position guest_Fred)))
 (let (($x45 (and (distinct ?x19 ?x16) true)))
 (let ((?x13 (position guest_Kate)))
 (let (($x44 (and (distinct ?x19 ?x13) true)))
 (let ((?x6 (position guest_Colin)))
 (let (($x43 (and (distinct ?x19 ?x6) true)))
 (let (($x42 (and (distinct ?x10 ?x19) true)))
 (let (($x41 (and (distinct ?x10 ?x16) true)))
 (let (($x40 (and (distinct ?x10 ?x13) true)))
 (let (($x39 (and (distinct ?x10 ?x6) true)))
 (let (($x38 (and (distinct ?x16 ?x19) true)))
 (let (($x37 (and (distinct ?x16 ?x10) true)))
 (let (($x36 (and (distinct ?x16 ?x13) true)))
 (let (($x35 (and (distinct ?x16 ?x6) true)))
 (let (($x34 (and (distinct ?x13 ?x19) true)))
 (let (($x33 (and (distinct ?x13 ?x10) true)))
 (let (($x32 (and (distinct ?x13 ?x16) true)))
 (let (($x31 (and (distinct ?x13 ?x6) true)))
 (let (($x30 (and (distinct ?x6 ?x19) true)))
 (let (($x29 (and (distinct ?x6 ?x10) true)))
 (let (($x28 (and (distinct ?x6 ?x16) true)))
 (let (($x27 (and (distinct ?x6 ?x13) true)))
 (let (($x26 (< ?x19 6)))
 (let (($x25 (< ?x16 6)))
 (let (($x24 (< ?x13 6)))
 (let (($x23 (< ?x10 6)))
 (let (($x22 (< ?x6 6)))
 (let (($x20 (> ?x19 0)))
 (let (($x17 (> ?x16 0)))
 (let (($x14 (> ?x13 0)))
 (let (($x11 (> ?x10 0)))
 (let (($x8 (> ?x6 0)))
 (and $x8 $x11 $x14 $x17 $x20 $x22 $x23 $x24 $x25 $x26 $x27 $x28 $x29 $x30 $x31 $x32 $x33 $x34 $x35 $x36 $x37 $x38 $x39 $x40 $x41 $x42 $x43 $x44 $x45 $x46 $x52 $x57 $x60 $x65 $x68 $x70)))))))))))))))))))))))))))))))))))))))))))
(check-sat)

(get-model)
